# https://proandroiddev.com/ci-cd-for-android-developers-iii-building-pipelines-with-github-actions-e328f26f414a

name: Android Workflow

env:
  versionName: "1.0"
  versionCode: $GITHUB_RUN_NUMBER
  offset: 100

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  testDebugUnitTest:
    uses: ./.github/workflows/testDebugUnitTest.yml

  # connectedDebugAndroidTest:
  #   uses: ./.github/workflows/connectedDebugAndroidTest.yml

  assembleDebug:
    uses: ./.github/workflows/assembleDebug.yml
    secrets: inherit

  #-------------------------------------------------------------------------------------------------
  # assembleDebug:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3

  #     # https://github.com/actions/setup-java
  #     - name: set up jdk
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '11'
  #         distribution: 'adopt'
  #         cache: gradle

  #     - name: set versionCode and versionName
  #       run: |
  #         versionCode=$(( ${{ env.versionCode }} + ${{ env.offset }} ))
  #         echo "VERSION_CODE=$versionCode" >> $GITHUB_ENV
  #         echo "VERSION_NAME=${{ env.versionName }}.$versionCode" >> $GITHUB_ENV

  #     # https://github.com/marketplace/actions/increment-the-version-code-of-your-project
  #     # https://github.com/chkfung/android-version-actions/issues/7
  #     - name: set version
  #       uses: chkfung/android-version-actions@v1.1
  #       with:
  #         gradlePath: app/build.gradle
  #         versionCode: ${{ env.VERSION_CODE }}
  #         versionName: ${{ env.VERSION_NAME }}

  #     - name: build
  #       run: |
  #         chmod +x ./gradlew
  #         ./gradlew assembleDebug

  #     # https://github.com/marketplace/actions/sign-android-release
  #     # https://github.com/r0adkll/sign-android-release/issues/71
  #     - name: sign
  #       uses: r0adkll/sign-android-release@v1
  #       id: sign
  #       with:
  #         releaseDirectory: ./app/build/outputs/apk/debug/
  #         signingKeyBase64: ${{ secrets.SIGNING_KEY_DEBUG }}
  #         alias: ${{ secrets.ALIAS_DEBUG }}
  #         keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
  #         keyPassword: ${{ secrets.KEY_PASSWORD_DEBUG }}
  #       # env:
  #       #   BUILD_TOOLS_VERSION: "32.0.0"

  #     # https://github.com/actions/upload-artifact
  #     - name: upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: debug
  #         path: ${{ steps.sign.outputs.signedReleaseFile }}
  #         # retention-days: 1     # Default and max is 90.

  #-------------------------------------------------------------------------------------------------
  # assembleRelease:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3

  #     - name: set up jdk
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '11'
  #         distribution: 'adopt'
  #         cache: gradle

  #     - name: set versionCode and versionName
  #       run: |
  #         versionCode=$(( ${{ env.versionCode }} + ${{ env.offset }} ))
  #         echo "VERSION_CODE=$versionCode" >> $GITHUB_ENV
  #         echo "VERSION_NAME=${{ env.versionName }}.$versionCode" >> $GITHUB_ENV

  #     - name: set version
  #       uses: chkfung/android-version-actions@v1.1
  #       with:
  #         gradlePath: app/build.gradle
  #         versionCode: ${{ env.VERSION_CODE }}
  #         versionName: ${{ env.VERSION_NAME }}

  #     - name: build
  #       run: |
  #         chmod +x ./gradlew
  #         ./gradlew assembleRelease

  #     - name: copy
  #       run: |
  #         for file_name in ./app/build/outputs/apk/release/*.apk; do            
  #           name=$(basename $file_name .apk)
  #           extension="${file_name##*.}"
  #           cp -- "$file_name" "$name-unsigned.$extension"
  #         done

  #     - name: upload unsigned artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: release
  #         path: ./*.apk
  #         retention-days: 1

  #     - name: sign
  #       uses: r0adkll/sign-android-release@v1
  #       id: sign
  #       with:
  #         releaseDirectory: ./app/build/outputs/apk/release/
  #         signingKeyBase64: ${{ secrets.SIGNING_KEY_RELEASE }}
  #         alias: ${{ secrets.ALIAS_RELEASE }}
  #         keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD_RELEASE }}
  #         keyPassword: ${{ secrets.KEY_PASSWORD_RELEASE }}

  #     - name: upload signed artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: release
  #         path: ${{ steps.sign.outputs.signedReleaseFile }}
  #         retention-days: 1

  #-------------------------------------------------------------------------------------------------
  # createRelease:
  #   if: github.event_name == 'push'
  #   # needs: [testDebugUnitTest, connectedAndroidTest, assembleDebug, assembleRelease]
  #   # needs: [assembleDebug, assembleRelease]
  #   needs: [testDebugUnitTest, assembleDebug, assembleRelease]
  #   runs-on: ubuntu-latest
  #   steps:
  #     # https://github.com/actions/download-artifact
  #     - name: download artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: ./

  #     - name: rename debug build
  #       run: |
  #         for file_name in ./debug/*.apk; do
  #           mv "$file_name" "$(echo "$file_name" | sed -e 's/-signed//g')"
  #         done

  #     - name: set versionCode and versionName
  #       run: |
  #         versionCode=$(( ${{ env.versionCode }} + ${{ env.offset }} ))
  #         echo "VERSION_CODE=$versionCode" >> $GITHUB_ENV
  #         echo "VERSION_NAME=${{ env.versionName }}.$versionCode" >> $GITHUB_ENV

  #     - name: create tag
  #       uses: actions/github-script@v3
  #       with:
  #         github-token: ${{ github.token }}
  #         script: |
  #           github.git.createRef({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             ref: "refs/tags/${{ env.VERSION_NAME }}",
  #             sha: context.sha
  #           })          

  #     # https://github.com/marketplace/actions/create-release
  #     - name: release action
  #       uses: ncipollo/release-action@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         tag: ${{ env.VERSION_NAME }}
  #         artifacts: >
  #           ./debug/*.apk,
  #           ./release/*.apk












#===================================================================================================
# - name: set versionCode and versionName
#   run: |
#     versionCode=$(( ${{ env.versionCode }} + ${{ env.offset }} ))
#     echo "VERSION_CODE=$versionCode" >> $GITHUB_ENV
#     echo "VERSION_NAME=${{ env.versionName }}.$versionCode" >> $GITHUB_ENV
# - name: test
#   run: |
#     echo "VERSION_CODE: $VERSION_CODE"
#     echo "VERSION_CODE: ${{ env.VERSION_CODE }}"
#     echo "VERSION_NAME: $VERSION_NAME"
#     echo "VERSION_NAME: ${{ env.VERSION_NAME }}"

# 🗸 ⚙️ 🆙 🛠️ 🖋️ ⬆️ ⬇️ 🔄 🏷️ 🛎️ 

# # https://github.com/anothrNick/github-tag-action
# - name: tag action
#   id: create_tag
#   uses: anothrNick/github-tag-action@1.36.0
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     DEFAULT_BUMP: patch
#     WITH_V: true

# # https://github.com/marketplace/actions/create-release
# - name: release action
#   uses: ncipollo/release-action@v1
#   with:
#     token: ${{ secrets.GITHUB_TOKEN }}
#     tag: ${{ steps.create_tag.outputs.tag }}
#     artifacts: >
#       ./debug/*.apk,
#       ./release/*.apk

# - name: foo
#   run: echo "${{ env.VERSION }}"

# - run: ls -laR ./

# - name: rename
#   run: mv ./app/build/outputs/apk/release/app-release{-unsigned,}.apk

# - name: ls
#   run: |
#     ls -la .

# /home/runner/work/MainDetail/MainDetail
# - name: pwd
#   run: pwd

# tag:
#   needs: [unit_test, build]
#   runs-on: ubuntu-latest

# https://github.com/softprops/action-gh-release
# - name: create release
#   uses: softprops/action-gh-release@v1
#   if: startsWith(github.ref, 'refs/tags/')
#   with:
#     files: |
#       ./app/build/outputs/apk/debug/app-debug-signed.apk
#       ./app/build/outputs/apk/release/app-release-unsigned.apk

# https://github.com/actions/upload-artifact
# - name: upload artifact
#   uses: actions/upload-artifact@v3
#   with:
#     path: |
#       ./app/build/outputs/apk/debug/app-debug-signed.apk
#       ./app/build/outputs/apk/release/app-release-unsigned.apk

# - name: ls
#   run: ls -la ./app/build/outputs/apk/debug/

# - name: create release
#   id: create_release
#   uses: actions/create-release@v1
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   with:
#     tag_name: ${{ github.ref }}
#     release_name: ${{ github.ref }}

# - name: save name of artifact
#   id: set-result-artifact
#   run: |
#     ARTIFACT_PATHNAME_APK=$(ls ./app/build/outputs/apk/debug/app-debug.apk | head -n 1)
#     ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
#     echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
#     echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
#     echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV

# - name: upload release asset
#   id: upload-release-asset
#   uses: actions/upload-release-asset@v1
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   with:
#     upload_url: ${{ steps.create_release.outputs.upload_url }}
#     asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
#     asset_name: ${{ env.ARTIFACT_NAME_APK }}
#     asset_content_type: application/zip
