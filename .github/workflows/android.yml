# https://proandroiddev.com/ci-cd-for-android-developers-iii-building-pipelines-with-github-actions-e328f26f414a

name: Android Workflow

env:
  versionCode: $GITHUB_RUN_NUMBER
  versionOffset: 100
  versionName: "1.0"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # https://github.com/orgs/community/discussions/26671
  versionInfo:
    runs-on: ubuntu-latest
    outputs:
      versionCode: ${{ steps.versionInfo.outputs.versionCode }}
      versionName: ${{ steps.versionInfo.outputs.versionName }}
      repoName: ${{ steps.versionInfo.outputs.repoName }}
      tagName: ${{ steps.versionInfo.outputs.tagName }}
    steps:
      - name: set version info
        id: versionInfo
        run: |
          version_code=$(( ${{ env.versionCode }} + ${{ env.versionOffset }} ))
          echo "versionCode=$version_code" >> $GITHUB_OUTPUT
          echo "versionName=${{ env.versionName }}" >> $GITHUB_OUTPUT
          echo "repoName=${GITHUB_REPOSITORY#*/}" >> $GITHUB_OUTPUT
          echo "tagName=${{ env.versionName }}.$version_code" >> $GITHUB_OUTPUT

  testDebugUnitTest:
    uses: ./.github/workflows/testDebugUnitTest.yml

#  connectedDebugAndroidTest:
#    uses: ./.github/workflows/connectedDebugAndroidTest.yml

  assembleDebug:
    needs: [versionInfo]
    uses: ./.github/workflows/assembleDebug.yml
    with:
      versionCode: ${{ needs.versionInfo.outputs.versionCode }}
      versionName: ${{ needs.versionInfo.outputs.versionName }}
      repoName: ${{ needs.versionInfo.outputs.repoName }}
    secrets: inherit

  assembleRelease:
    needs: [versionInfo]
    uses: ./.github/workflows/assembleRelease.yml
    with:
      versionCode: ${{ needs.versionInfo.outputs.versionCode }}
      versionName: ${{ needs.versionInfo.outputs.versionName }}
      repoName: ${{ needs.versionInfo.outputs.repoName }}
    secrets: inherit

  release:
    if: github.event.pull_request.merged == true
#    if: github.event_name == 'push'
    needs: [versionInfo, testDebugUnitTest, assembleDebug, assembleRelease]
    uses: ./.github/workflows/release.yml
    with:
      tagName: ${{ needs.versionInfo.outputs.tagName }}
    secrets: inherit






#===================================================================================================
# - name: set versionCode and versionName
#   run: |
#     versionCode=$(( ${{ env.versionCode }} + ${{ env.offset }} ))
#     echo "VERSION_CODE=$versionCode" >> $GITHUB_ENV
#     echo "VERSION_NAME=${{ env.versionName }}.$versionCode" >> $GITHUB_ENV
# - name: test
#   run: |
#     echo "VERSION_CODE: $VERSION_CODE"
#     echo "VERSION_CODE: ${{ env.VERSION_CODE }}"
#     echo "VERSION_NAME: $VERSION_NAME"
#     echo "VERSION_NAME: ${{ env.VERSION_NAME }}"

# 🗸 ⚙️ 🆙 🛠️ 🖋️ ⬆️ ⬇️ 🔄 🏷️ 🛎️ 

# - name: foo
#   run: echo "${{ env.VERSION }}"

# - run: ls -laR ./

# - name: rename
#   run: mv ./app/build/outputs/apk/release/app-release{-unsigned,}.apk

# - name: ls
#   run: |
#     ls -la .

# /home/runner/work/MainDetail/MainDetail
# - name: pwd
#   run: pwd

# tag:
#   needs: [unit_test, build]
#   runs-on: ubuntu-latest

# https://github.com/softprops/action-gh-release
# - name: create release
#   uses: softprops/action-gh-release@v1
#   if: startsWith(github.ref, 'refs/tags/')
#   with:
#     files: |
#       ./app/build/outputs/apk/debug/app-debug-signed.apk
#       ./app/build/outputs/apk/release/app-release-unsigned.apk

# https://github.com/actions/upload-artifact
# - name: upload artifact
#   uses: actions/upload-artifact@v3
#   with:
#     path: |
#       ./app/build/outputs/apk/debug/app-debug-signed.apk
#       ./app/build/outputs/apk/release/app-release-unsigned.apk

# - name: ls
#   run: ls -la ./app/build/outputs/apk/debug/

# - name: create release
#   id: create_release
#   uses: actions/create-release@v1
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   with:
#     tag_name: ${{ github.ref }}
#     release_name: ${{ github.ref }}

# - name: save name of artifact
#   id: set-result-artifact
#   run: |
#     ARTIFACT_PATHNAME_APK=$(ls ./app/build/outputs/apk/debug/app-debug.apk | head -n 1)
#     ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
#     echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
#     echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
#     echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV

# - name: upload release asset
#   id: upload-release-asset
#   uses: actions/upload-release-asset@v1
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   with:
#     upload_url: ${{ steps.create_release.outputs.upload_url }}
#     asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
#     asset_name: ${{ env.ARTIFACT_NAME_APK }}
#     asset_content_type: application/zip
